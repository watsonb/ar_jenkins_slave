---

- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"

  tasks:

    - name: VMWARE_GUEST | Ensure VMs exist in VMware
      vmware_guest:
        hostname: "{{ molecule_yml.driver.vcenter_fqdn }}"
        username: "{{ molecule_yml.driver.vcenter_username }}"
        password: "{{ molecule_yml.driver.vcenter_password }}"
        name: "{{ item.name }}"
        folder: "{{ molecule_yml.driver.folder }}"
        datacenter: "{{ molecule_yml.driver.datacenter }}"
        cluster: "{{ molecule_yml.driver.cluster }}"
        state: poweredon
        validate_certs: false
        wait_for_ip_address: true
        template: "{{ item.template | default('ubuntu-1604-server-03') }}"
        disk:
          - size_gb: "{{ item.disk_size | default(30) }}"
            type: thin
            datastore: "{{ molecule_yml.driver.datastore }}"
        hardware:
          memory_mb: "{{ item.memory_mb | default(1024) }}"
          num_cpus: "{{ item.num_cpus | default(1) }}"
        networks:
          - name: "{{ molecule_yml.driver.network }}"
      register: server
      with_items: "{{ molecule_yml.platforms }}"

    - name: Populate instance config dict
      set_fact:
        instance_conf_dict: {
          'instance': "{{ item.instance.hw_name }}",
          'address': "{{ item.instance.ipv4 }}",
          'user': "{{ molecule_yml.driver.ssh_user }}",
          'port': "{{ molecule_yml.driver.ssh_port }}",
          'identity_file': "{{ molecule_yml.driver.ssh_identity_file }}"
        }
      with_items: "{{ server.results }}"
      register: instance_config_dict

    - name: Convert instance config dict to a list
      set_fact:
        instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"

    - name: Dump instance config
      copy:
        # NOTE(retr0h): Workaround for Ansible 2.2.
        #               https://github.com/ansible/ansible/issues/20885
        content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
        dest: "{{ molecule_instance_config }}"

    - name: render ssh_config for instances
      template:
        src: 'ssh_config.j2'
        dest: "/tmp/molecule-ssh-config"

    - name: Wait for system to become reachable
      delegate_to: localhost
      wait_for:
        port: 22
        host: "{{ item.instance.ipv4 }}"
      with_items: "{{ server.results }}"
